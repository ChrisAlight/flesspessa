{
  "version": 3,
  "sources": ["../scripts/entry.ts", "../scripts/Storage.ts", "../scripts/shopData.ts", "../scripts/App.ts", "../scripts/FlagDrag.ts"],
  "sourcesContent": ["import Storage from './Storage';\r\nimport shopData from './shopData';\r\nimport App, { difficultyData } from './App';\r\nimport FlagDrag from './FlagDrag';\r\n\r\n// Attach to window for backward compatibility with inline scripts in HTML\r\ndeclare global {\r\n    interface Window {\r\n        Storage: any;\r\n        storage: any;\r\n        shopData: any;\r\n        App: any;\r\n        FlagDrag: any;\r\n        difficultyData: any;\r\n    }\r\n}\r\n\r\nwindow.Storage = Storage;\r\nwindow.shopData = shopData;\r\nwindow.App = App;\r\nwindow.FlagDrag = FlagDrag;\r\nwindow.difficultyData = difficultyData;\r\n\r\n// Export nothing; this file's sole purpose is to populate globals for legacy HTML\r\nexport {};\r\n", "export class Storage {\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        if (!localStorage.getItem('coins')) {\r\n            localStorage.setItem('coins', '0');\r\n        }\r\n        if (!localStorage.getItem('purchases')) {\r\n            localStorage.setItem('purchases', '[]');\r\n            this.addPurchase('white'); // Default background\r\n        }\r\n        if (!localStorage.getItem('difficulty')) {\r\n            localStorage.setItem('difficulty', 'easy');\r\n        }\r\n        this.updateCoinText();\r\n    }\r\n\r\n    getCoins(): number {\r\n        return parseInt(localStorage.getItem('coins') || '0') || 0;\r\n    }\r\n\r\n    setCoins(amount: number) {\r\n        if (typeof amount !== 'number' || amount < 0) {\r\n            throw new Error('Invalid coin amount');\r\n        }\r\n        localStorage.setItem('coins', amount.toString());\r\n        this.updateCoinText();\r\n    }\r\n\r\n    addCoins(amount: number) {\r\n        if (typeof amount !== 'number' || amount < 0) {\r\n            throw new Error('Invalid coin amount');\r\n        }\r\n        const currentCoins = this.getCoins();\r\n        this.setCoins(currentCoins + amount);\r\n    }\r\n\r\n    spendCoins(amount: number) {\r\n        if (typeof amount !== 'number' || amount < 0) {\r\n            throw new Error('Invalid coin amount');\r\n        }\r\n        const currentCoins = this.getCoins();\r\n        if (currentCoins < amount) {\r\n            throw new Error('Not enough coins');\r\n        }\r\n        this.setCoins(currentCoins - amount);\r\n    }\r\n\r\n    updateCoinText() {\r\n        const coinText = document.getElementById('coinText');\r\n        if (coinText) {\r\n            coinText.innerHTML = String(this.getCoins());\r\n        }\r\n    }\r\n\r\n    getPurchases(): string[] {\r\n        return JSON.parse(localStorage.getItem('purchases') || '[]') || [];\r\n    }\r\n\r\n    hasPurchase(itemId: string): boolean {\r\n        const purchases = this.getPurchases();\r\n        return purchases.includes(itemId);\r\n    }\r\n\r\n    addPurchase(itemId: string) {\r\n        const purchases = this.getPurchases();\r\n        if (!purchases.includes(itemId)) {\r\n            purchases.push(itemId);\r\n            localStorage.setItem('purchases', JSON.stringify(purchases));\r\n        }\r\n    }\r\n\r\n    getDifficulty(): string {\r\n        return localStorage.getItem('difficulty') || 'easy';\r\n    }\r\n\r\n    setDifficulty(difficulty: string) {\r\n        const validDifficulties = ['easy', 'normal', 'hard', 'superHard'];\r\n        if (!validDifficulties.includes(difficulty)) {\r\n            throw new Error('Invalid difficulty');\r\n        }\r\n        localStorage.setItem('difficulty', difficulty);\r\n    }\r\n\r\n    setBackground(background: string) {\r\n        if (typeof background !== 'string') {\r\n            throw new Error('Invalid background');\r\n        }\r\n        localStorage.setItem('background', background);\r\n    }\r\n\r\n    getBackground(): string | null {\r\n        return localStorage.getItem('background');\r\n    }\r\n}\r\n\r\n// Default export for compatibility with existing code that may import as default\r\nexport default Storage;\r\n", "export const shopData = {\r\n    backgrounds: [\r\n        { name: 'red', price: 50, color: '#ffaaaa' },\r\n        { name: 'orange', price: 50, color: '#ff8e03ff' },\r\n        { name: 'yellow', price: 50, color: '#ffffaa' },\r\n        { name: 'green', price: 50, color: '#aaffaa' },\r\n        { name: 'teal', price: 50, color: '#02ffccff' },\r\n        { name: 'blue', price: 50, color: '#5763ffff' },\r\n        { name: 'purple', price: 50, color: '#ae5dffff' },\r\n        { name: 'magenta', price: 50, color: '#ba00feff' },\r\n        { name: 'pink', price: 50, color: '#ffb3d9ff' },\r\n        { name: 'brown', price: 50, color: '#a0522d' },\r\n        { name: 'white', price: 0, color: '#ffffff' },\r\n        { name: 'gray', price: 50, color: '#808080' },\r\n        { name: 'black', price: 50, color: '#000000' },\r\n    ],\r\n    difficulty: [\r\n        { name: 'flag drag', price: 0 },\r\n        { name: 'normal', price: 30 },\r\n        { name: 'hard', price: 50 }\r\n    ],\r\n    // characters: [\r\n    //     { name: 'snake', price: 10, image: 'assets/characters/snake.png' },\r\n    //     { name: 'dog', price: 10, image: 'assets/characters/dog.png' },\r\n    //     { name: 'spike ball', price: 10, image: 'assets/characters/spikeBall.png' },\r\n    //     { name: 'tree man', price: 10, image: 'assets/characters/treeMan.png' },\r\n    //     { name: '33 damage', price: 10, image: 'assets/characters/33Damage.png' }\r\n    // ],\r\n    map: [\r\n        { name: 'map', price: 1000 }\r\n    ]\r\n};\r\n\r\nexport type Background = typeof shopData.backgrounds[number];\r\nexport type DifficultyItem = typeof shopData.difficulty[number];\r\n\r\nexport default shopData;\r\n", "import { shopData } from './shopData';\r\nimport { Storage } from './Storage';\r\n\r\ntype Country = { name: string; code: string };\r\n\r\nexport const difficultyData: { [k: string]: { name: string; countries: Country[]; reward: number } } = {\r\n    easy: {\r\n        name: 'Easy',\r\n        countries: [\r\n            { name: 'USA', code: 'us' },\r\n            { name: 'Canada', code: 'ca' },\r\n            { name: 'China', code: 'cn' },\r\n            { name: 'Jamaica', code: 'jm' },\r\n            { name: 'UK', code: 'gb' },\r\n            { name: 'Ireland', code: 'ie' }\r\n        ],\r\n        reward: 3\r\n    },\r\n    normal: {\r\n        name: 'Normal',\r\n        countries: [\r\n            { name: 'Serbia', code: 'rs' },\r\n            { name: 'Sweden', code: 'se' },\r\n            { name: 'Philippines', code: 'ph' },\r\n            { name: 'Netherlands', code: 'nl' },\r\n            { name: 'Bahamas', code: 'bs' },\r\n            { name: 'Portugal', code: 'pt' }\r\n        ],\r\n        reward: 5\r\n    },\r\n    hard: {\r\n        name: 'Hard',\r\n        countries: [\r\n            { name: 'Ghana', code: 'gh' },\r\n            { name: 'Uganda', code: 'ug' },\r\n            { name: 'Kenya', code: 'ke' },\r\n            { name: 'Rwanda', code: 'rw' },\r\n            { name: 'Brunei', code: 'bn' },\r\n            { name: 'Mauritius', code: 'mu' }\r\n        ],\r\n        reward: 7\r\n    },\r\n    superHard: {\r\n        name: 'Super Hard!!!!!',\r\n        countries: [\r\n            { name: 'Monaco', code: 'mc' },\r\n            { name: 'Indonesia', code: 'id' },\r\n            { name: 'Poland', code: 'pl' },\r\n            { name: 'Chad', code: 'td' },\r\n            { name: 'Romania', code: 'ro' },\r\n            { name: 'Dominica', code: 'dm' }\r\n        ],\r\n        reward: 10\r\n    }\r\n};\r\n\r\nexport class App {\r\n    storage: Storage;\r\n    difficulty: string;\r\n    nextDifficulty?: string;\r\n    countries: Country[];\r\n    reward: number;\r\n\r\n    hasAnswered = false;\r\n    correctAnswer?: Country;\r\n    correctAnswerCount = 0;\r\n\r\n    constructor(storage: Storage) {\r\n        this.storage = storage;\r\n\r\n        const queryString = window.location.search;\r\n        const urlParams = new URLSearchParams(queryString);\r\n        this.difficulty = urlParams.get('difficulty') || '';\r\n        if (!(this.difficulty in difficultyData) || !storage.hasPurchase(this.difficulty)) {\r\n            this.difficulty = 'easy';\r\n        }\r\n        (document.getElementById('difficultyHeader')!).innerHTML = difficultyData[this.difficulty].name;\r\n\r\n        const nextDifficulty = Object.keys(difficultyData)[Object.keys(difficultyData).indexOf(this.difficulty) + 1];\r\n        if (nextDifficulty && storage.hasPurchase(nextDifficulty)) {\r\n            this.nextDifficulty = nextDifficulty;\r\n        }\r\n\r\n        this.countries = difficultyData[this.difficulty].countries.slice();\r\n        this.reward = difficultyData[this.difficulty].reward;\r\n\r\n        this.generateAnswerButtons();\r\n        this.setRandomFlag();\r\n    }\r\n\r\n    static setUpPage(storage: Storage) {\r\n        const backgroundName = storage.getBackground();\r\n        const backgroundColor = shopData.backgrounds.find((bg: any) => bg.name === backgroundName)?.color || '#ffffff';\r\n        document.body.style.setProperty('background-color', backgroundColor);\r\n    }\r\n\r\n    generateAnswerButtons() {\r\n        const answerButtonContainer = document.getElementById('answerButtons')!;\r\n        answerButtonContainer.innerHTML = '';\r\n\r\n        for (const country of this.countries) {\r\n            const answerButton = document.createElement('button');\r\n            answerButton.innerHTML = country.name;\r\n            answerButton.onclick = () => this.answer(country.name);\r\n            answerButtonContainer.appendChild(answerButton);\r\n        }\r\n    }\r\n\r\n    getRandomCountry(): Country {\r\n        const randomIndex = Math.floor(Math.random() * this.countries.length);\r\n        return this.countries.splice(randomIndex, 1)[0];\r\n    }\r\n\r\n    setRandomFlag() {\r\n        const randomCountry = this.getRandomCountry();\r\n        const flagImage = document.getElementById('flagImage') as HTMLImageElement;\r\n        flagImage.src = `assets/flags/${randomCountry.code}.webp`;\r\n        this.correctAnswer = randomCountry;\r\n    }\r\n\r\n    answer(selection: string) {\r\n        if (this.hasAnswered) {\r\n            return;\r\n        }\r\n        this.hasAnswered = true;\r\n\r\n        const result = document.getElementById('result')!;\r\n        const resultMessage = document.getElementById('resultMessage')!;\r\n        const resultLink = document.getElementById('resultLink')!;\r\n        const wasCorrect = selection === this.correctAnswer!.name;\r\n\r\n        (result as HTMLElement).style.display = 'inherit';\r\n\r\n        if (wasCorrect) {\r\n            this.correctAnswerCount++;\r\n            this.storage.addCoins(this.reward);\r\n            resultMessage.innerHTML = `Correct! The flag is for ${this.correctAnswer!.name}.`;\r\n            resultLink.innerHTML = this.correctAnswerCount < 3 ? 'Next Question' : this.nextDifficulty ? `Try ${difficultyData[this.nextDifficulty].name}` : 'Back to Menu';\r\n            resultLink.onclick = () => {\r\n                if (this.correctAnswerCount < 3) {\r\n                    this.setRandomFlag();\r\n                    (result as HTMLElement).style.display = 'none';\r\n                } else if (this.nextDifficulty) {\r\n                    window.location.href = `game.html?difficulty=${this.nextDifficulty}`;\r\n                } else {\r\n                    window.location.href = 'index.html';\r\n                }\r\n                this.hasAnswered = false;\r\n            };\r\n        } else {\r\n            resultMessage.innerHTML = 'Incorrect!';\r\n            resultLink.innerHTML = 'Try Again';\r\n            resultLink.onclick = () => {\r\n                (result as HTMLElement).style.display = 'none';\r\n                this.hasAnswered = false;\r\n            };\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default App;\r\n", "type CountryMap = { [code: string]: { name: string } };\r\n\r\nexport const countryNames: CountryMap = {\r\n    ad: { name: 'Andorra' },\r\n    ae: { name: 'United Arab Emirates' },\r\n    af: { name: 'Afghanistan' },\r\n    ag: { name: 'Antigua and Barbuda' },\r\n    ai: { name: 'Anguilla' },\r\n    al: { name: 'Albania' },\r\n    am: { name: 'Armenia' },\r\n    ao: { name: 'Angola' },\r\n    ar: { name: 'Argentina' },\r\n    at: { name: 'Austria' },\r\n    au: { name: 'Australia' },\r\n    aw: { name: 'Aruba' },\r\n    az: { name: 'Azerbaijan' },\r\n    ba: { name: 'Bosnia and Herzegovina' },\r\n    bb: { name: 'Barbados' },\r\n    bd: { name: 'Bangladesh' },\r\n    be: { name: 'Belgium' },\r\n    bf: { name: 'Burkina Faso' },\r\n    bg: { name: 'Bulgaria' },\r\n    bh: { name: 'Bahrain' },\r\n    bi: { name: 'Burundi' },\r\n    bj: { name: 'Benin' },\r\n    bn: { name: 'Brunei' },\r\n    bo: { name: 'Bolivia' },\r\n    br: { name: 'Brazil' },\r\n    bs: { name: 'Bahamas' },\r\n    bt: { name: 'Bhutan' },\r\n    bw: { name: 'Botswana' },\r\n    by: { name: 'Belarus' },\r\n    bz: { name: 'Belize' },\r\n    ca: { name: 'Canada' },\r\n    cd: { name: 'Democratic Republic of the Congo' },\r\n    cf: { name: 'Central African Republic' },\r\n    cg: { name: 'Republic of the Congo' },\r\n    ch: { name: 'Switzerland' },\r\n    ci: { name: 'Ivory Coast' },\r\n    cl: { name: 'Chile' },\r\n    cm: { name: 'Cameroon' },\r\n    cn: { name: 'China' },\r\n    co: { name: 'Colombia' },\r\n    cr: { name: 'Costa Rica' },\r\n    cu: { name: 'Cuba' },\r\n    cv: { name: 'Cape Verde' },\r\n    cy: { name: 'Cyprus' },\r\n    cz: { name: 'Czechia' },\r\n    de: { name: 'Germany' },\r\n    dj: { name: 'Djibouti' },\r\n    dk: { name: 'Denmark' },\r\n    dm: { name: 'Dominica' },\r\n    do: { name: 'Dominican Republic' },\r\n    dz: { name: 'Algeria' },\r\n    ec: { name: 'Ecuador' },\r\n    ee: { name: 'Estonia' },\r\n    eg: { name: 'Egypt' },\r\n    er: { name: 'Eritrea' },\r\n    es: { name: 'Spain' },\r\n    et: { name: 'Ethiopia' },\r\n    fi: { name: 'Finland' },\r\n    fj: { name: 'Fiji' },\r\n    fm: { name: 'Micronesia' },\r\n    fo: { name: 'Faroe Islands' },\r\n    fr: { name: 'France' },\r\n    ga: { name: 'Gabon' },\r\n    gb: { name: 'United Kingdom' },\r\n    gd: { name: 'Grenada' },\r\n    ge: { name: 'Georgia' },\r\n    gf: { name: 'French Guiana' },\r\n    gg: { name: 'Guernsey' },\r\n    gh: { name: 'Ghana' },\r\n    gi: { name: 'Gibraltar' },\r\n    gl: { name: 'Greenland' },\r\n    gm: { name: 'Gambia' },\r\n    gn: { name: 'Guinea' },\r\n    gq: { name: 'Equatorial Guinea' },\r\n    gr: { name: 'Greece' },\r\n    gt: { name: 'Guatemala' },\r\n    gu: { name: 'Guam' },\r\n    gw: { name: 'Guinea-Bissau' },\r\n    gy: { name: 'Guyana' },\r\n    hk: { name: 'Hong Kong' },\r\n    hm: { name: 'Heard Island and McDonald Islands' },\r\n    hn: { name: 'Honduras' },\r\n    hr: { name: 'Croatia' },\r\n    ht: { name: 'Haiti' },\r\n    hu: { name: 'Hungary' },\r\n    id: { name: 'Indonesia' },\r\n    ie: { name: 'Ireland' },\r\n    il: { name: 'Israel' },\r\n    im: { name: 'Isle of Man' },\r\n    in: { name: 'India' },\r\n    io: { name: 'British Indian Ocean Territory' },\r\n    iq: { name: 'Iraq' },\r\n    ir: { name: 'Iran' },\r\n    is: { name: 'Iceland' },\r\n    it: { name: 'Italy' },\r\n    je: { name: 'Jersey' },\r\n    jm: { name: 'Jamaica' },\r\n    jo: { name: 'Jordan' },\r\n    jp: { name: 'Japan' },\r\n    ke: { name: 'Kenya' },\r\n    kg: { name: 'Kyrgyzstan' },\r\n    kh: { name: 'Cambodia' },\r\n    ki: { name: 'Kiribati' },\r\n    km: { name: 'Comoros' },\r\n    kn: { name: 'Saint Kitts and Nevis' },\r\n    kp: { name: 'North Korea' },\r\n    kr: { name: 'South Korea' },\r\n    kw: { name: 'Kuwait' },\r\n    ky: { name: 'Cayman Islands' },\r\n    kz: { name: 'Kazakhstan' },\r\n    la: { name: 'Laos' },\r\n    lb: { name: 'Lebanon' },\r\n    lc: { name: 'Saint Lucia' },\r\n    li: { name: 'Liechtenstein' },\r\n    lk: { name: 'Sri Lanka' },\r\n    lr: { name: 'Liberia' },\r\n    ls: { name: 'Lesotho' },\r\n    lt: { name: 'Lithuania' },\r\n    lu: { name: 'Luxembourg' },\r\n    lv: { name: 'Latvia' },\r\n    ly: { name: 'Libya' },\r\n    ma: { name: 'Morocco' },\r\n    mc: { name: 'Monaco' },\r\n    md: { name: 'Moldova' },\r\n    me: { name: 'Montenegro' },\r\n    mf: { name: 'Saint Martin' },\r\n    mg: { name: 'Madagascar' },\r\n    mh: { name: 'Marshall Islands' },\r\n    mk: { name: 'North Macedonia' },\r\n    ml: { name: 'Mali' },\r\n    mm: { name: 'Myanmar' },\r\n    mn: { name: 'Mongolia' },\r\n    mo: { name: 'Macau' },\r\n    mp: { name: 'Northern Mariana Islands' },\r\n    mq: { name: 'Martinique' },\r\n    mr: { name: 'Mauritania' },\r\n    ms: { name: 'Montserrat' },\r\n    mt: { name: 'Malta' },\r\n    mu: { name: 'Mauritius' },\r\n    mv: { name: 'Maldives' },\r\n    mw: { name: 'Malawi' },\r\n    mx: { name: 'Mexico' },\r\n    my: { name: 'Malaysia' },\r\n    mz: { name: 'Mozambique' },\r\n    na: { name: 'Namibia' },\r\n    nc: { name: 'New Caledonia' },\r\n    ne: { name: 'Niger' },\r\n    nf: { name: 'Norfolk Island' },\r\n    ng: { name: 'Nigeria' },\r\n    ni: { name: 'Nicaragua' },\r\n    nl: { name: 'Netherlands' },\r\n    no: { name: 'Norway' },\r\n    np: { name: 'Nepal' },\r\n    nr: { name: 'Nauru' },\r\n    nu: { name: 'Niue' },\r\n    nz: { name: 'New Zealand' },\r\n    om: { name: 'Oman' },\r\n    pa: { name: 'Panama' },\r\n    pe: { name: 'Peru' },\r\n    pf: { name: 'French Polynesia' },\r\n    pg: { name: 'Papua New Guinea' },\r\n    ph: { name: 'Philippines' },\r\n    pk: { name: 'Pakistan' },\r\n    pl: { name: 'Poland' },\r\n    pm: { name: 'Saint Pierre and Miquelon' },\r\n    pn: { name: 'Pitcairn Islands' },\r\n    pr: { name: 'Puerto Rico' },\r\n    ps: { name: 'Palestine' },\r\n    pt: { name: 'Portugal' },\r\n    pw: { name: 'Palau' },\r\n    py: { name: 'Paraguay' },\r\n    qa: { name: 'Qatar' },\r\n    re: { name: 'R\u00E9union' },\r\n    ro: { name: 'Romania' },\r\n    rs: { name: 'Serbia' },\r\n    ru: { name: 'Russia' },\r\n    rw: { name: 'Rwanda' },\r\n    sa: { name: 'Saudi Arabia' },\r\n    sb: { name: 'Solomon Islands' },\r\n    sc: { name: 'Seychelles' },\r\n    sd: { name: 'Sudan' },\r\n    se: { name: 'Sweden' },\r\n    sg: { name: 'Singapore' },\r\n    sh: { name: 'Saint Helena' },\r\n    si: { name: 'Slovenia' },\r\n    sj: { name: 'Svalbard and Jan Mayen' },\r\n    sk: { name: 'Slovakia' },\r\n    sl: { name: 'Sierra Leone' },\r\n    sm: { name: 'San Marino' },\r\n    sn: { name: 'Senegal' },\r\n    so: { name: 'Somalia' },\r\n    sr: { name: 'Suriname' },\r\n    ss: { name: 'South Sudan' },\r\n    st: { name: 'S\u00E3o Tom\u00E9 and Pr\u00EDncipe' },\r\n    sv: { name: 'El Salvador' },\r\n    sx: { name: 'Sint Maarten' },\r\n    sy: { name: 'Syria' },\r\n    sz: { name: 'Eswatini' },\r\n    tc: { name: 'Turks and Caicos Islands' },\r\n    td: { name: 'Chad' },\r\n    tf: { name: 'French Southern Territories' },\r\n    tg: { name: 'Togo' },\r\n    th: { name: 'Thailand' },\r\n    tj: { name: 'Tajikistan' },\r\n    tk: { name: 'Tokelau' },\r\n    tl: { name: 'Timor-Leste' },\r\n    tm: { name: 'Turkmenistan' },\r\n    tn: { name: 'Tunisia' },\r\n    to: { name: 'Tonga' },\r\n    tr: { name: 'Turkey' },\r\n    tt: { name: 'Trinidad and Tobago' },\r\n    tv: { name: 'Tuvalu' },\r\n    tw: { name: 'Taiwan' },\r\n    tz: { name: 'Tanzania' },\r\n    ua: { name: 'Ukraine' },\r\n    ug: { name: 'Uganda' },\r\n    um: { name: 'United States Minor Outlying Islands' },\r\n    us: { name: 'United States' },\r\n    uy: { name: 'Uruguay' },\r\n    uz: { name: 'Uzbekistan' },\r\n    va: { name: 'Vatican City' },\r\n    vc: { name: 'Saint Vincent and the Grenadines' },\r\n    ve: { name: 'Venezuela' },\r\n    vg: { name: 'British Virgin Islands' },\r\n    vi: { name: 'U.S. Virgin Islands' },\r\n    vn: { name: 'Vietnam' },\r\n    vu: { name: 'Vanuatu' },\r\n    wf: { name: 'Wallis and Futuna' },\r\n    ws: { name: 'Samoa' },\r\n    ye: { name: 'Yemen' },\r\n    yt: { name: 'Mayotte' },\r\n    za: { name: 'South Africa' },\r\n    zm: { name: 'Zambia' },\r\n    zw: { name: 'Zimbabwe' },\r\n    eh: { name: 'Western Sahara' },\r\n    xk: { name: 'Kosovo' }\r\n};\r\n\r\n// Keep a loose type for the global storage instance so existing code that references `storage` still works.\r\ndeclare const storage: Storage;\r\n\r\nexport class FlagDrag {\r\n    static setUpFlags() {\r\n        const dropZones = document.getElementById('dropZones')!;\r\n        const draggableList = document.getElementById('draggableCountries')!;\r\n        const result = document.getElementById('result')!;\r\n\r\n        dropZones.innerHTML = '';\r\n        draggableList.innerHTML = '';\r\n        result.innerHTML = '';\r\n\r\n        const countries = Object.keys(countryNames).sort(() => Math.random() - 0.5);\r\n        countries.length = 5;\r\n\r\n        // Create drop zones\r\n        countries.forEach(countryCode => {\r\n            const zone = document.createElement('div');\r\n            zone.className = 'drop-zone';\r\n            zone.dataset.country = countryCode;\r\n            zone.innerHTML = `<span>Drop here: ${countryNames[countryCode].name}</span>`;\r\n            zone.ondragover = e => e.preventDefault();\r\n            zone.ondrop = function (e) {\r\n                e.preventDefault();\r\n                const draggedCode = e.dataTransfer!.getData('text/plain');\r\n                FlagDrag.handleDrop(this as HTMLElement, draggedCode, draggableList, result);\r\n            };\r\n            dropZones.appendChild(zone);\r\n        });\r\n\r\n        countries.sort(() => Math.random() - 0.5);\r\n\r\n        // Create draggable flags\r\n        countries.forEach(countryCode => {\r\n            const flag = document.createElement('img');\r\n            flag.id = `flag-${countryCode}`;\r\n            flag.src = `assets/flags/${countryCode}.webp`;\r\n            flag.className = 'draggable-flag';\r\n            flag.draggable = true;\r\n            flag.dataset.country = countryCode;\r\n            flag.ondragstart = function (e) {\r\n                e.dataTransfer!.setData('text/plain', countryCode);\r\n            };\r\n\r\n            // Touch event support for mobile\r\n            let touchClone: HTMLImageElement | null = null;\r\n            let lastTouch: Touch | null = null;\r\n            flag.addEventListener('touchstart', function (e) {\r\n                if (e.touches.length !== 1) return;\r\n                (flag as HTMLElement).style.opacity = '0.6';\r\n                lastTouch = e.touches[0];\r\n                // Create a clone to follow the finger\r\n                touchClone = flag.cloneNode(true) as HTMLImageElement;\r\n                touchClone.style.position = 'fixed';\r\n                touchClone.style.pointerEvents = 'none';\r\n                touchClone.style.zIndex = '9999';\r\n                touchClone.style.left = (lastTouch.clientX - flag.width / 2) + 'px';\r\n                touchClone.style.top = (lastTouch.clientY - flag.height / 2) + 'px';\r\n                touchClone.style.opacity = '0.8';\r\n                document.body.appendChild(touchClone);\r\n            });\r\n            flag.addEventListener('touchmove', function (e) {\r\n                if (!touchClone || e.touches.length !== 1) return;\r\n                lastTouch = e.touches[0];\r\n                touchClone.style.left = (lastTouch.clientX - flag.width / 2) + 'px';\r\n                touchClone.style.top = (lastTouch.clientY - flag.height / 2) + 'px';\r\n                e.preventDefault();\r\n            }, { passive: false });\r\n            flag.addEventListener('touchend', function (e) {\r\n                (flag as HTMLElement).style.opacity = '';\r\n                if (touchClone) {\r\n                    // Detect drop zone under finger\r\n                    const dropZones = document.querySelectorAll('.drop-zone');\r\n                    let dropped = false;\r\n                    dropZones.forEach(zone => {\r\n                        if (dropped) return;\r\n\r\n                        const rect = zone.getBoundingClientRect();\r\n                        if (lastTouch && lastTouch.clientX >= rect.left && lastTouch.clientX <= rect.right && lastTouch.clientY >= rect.top && lastTouch.clientY <= rect.bottom) {\r\n                            FlagDrag.handleDrop(zone as HTMLElement, countryCode, draggableList, result);\r\n                            dropped = true;\r\n                        }\r\n                    });\r\n                    document.body.removeChild(touchClone);\r\n                    touchClone = null;\r\n                    lastTouch = null;\r\n                }\r\n            });\r\n            draggableList.appendChild(flag);\r\n        });\r\n    }\r\n\r\n    static handleDrop(zone: HTMLElement, draggedCode: string, draggableList: HTMLElement, result: HTMLElement) {\r\n        if (zone.classList.contains('correct')) return; // Already correct\r\n\r\n        const countryCode = zone.dataset.country!;\r\n        if (draggedCode === countryCode) {\r\n            zone.classList.add('correct');\r\n            zone.classList.remove('incorrect');\r\n            zone.innerHTML = `<strong>Correct! ${countryNames[countryCode].name}</strong>`;\r\n            zone.ondrop = e => e.preventDefault();\r\n            // Use global storage if available\r\n            try { storage.addCoins(1); } catch (e) { /* ignore if storage not present */ }\r\n            const flagEl = document.getElementById(`flag-${countryCode}`);\r\n            if (flagEl) flagEl.remove();\r\n            if (draggableList.children.length === 0) {\r\n                result.innerHTML = '<strong>All flags placed! Well done!</strong><br /><a href=\"javascript:FlagDrag.setUpFlags()\">Play Again</a>';\r\n            }\r\n        } else {\r\n            zone.classList.add('incorrect');\r\n            zone.innerHTML = `<strong>Wrong! Try again for ${countryNames[countryCode].name}</strong>`;\r\n        }\r\n    }\r\n}\r\n\r\nexport default FlagDrag;\r\n"],
  "mappings": "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",
  "names": ["storage", "dropZones"]
}
